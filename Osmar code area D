#Openstreetmap und R

library(osmar)

#structure: center_bbox(center_lon, center_lat, width, height)

#convert the circle used for Google Maps Download into a minimum bounding rectangle
circle2square <- function(center = c(0,0),radius = 1){
	r_x <- radius/(111120*cos(pi/(180/center[2])))
	r_y <- (radius/(111120*cos(pi/(180/center[2])))) * cos(pi/(180/center[2]))
	top <- c(center[1],center[2]+r_y)
	bottom <- c(center[1],center[2]-r_y)
	left <- c(center[1]-r_x,center[2])
	right <- c(center[1]+r_x,center[2])
	top_left <- c(center[1]-r_x,center[2]+r_y)
	top_right <- c(center[1]+r_x,center[2]+r_y)
	bottom_left <- c(center[1]-r_x,center[2]-r_y)
	bottom_right <- c(center[1]+r_x,center[2]-r_y)
	return(data.frame(x = c(bottom_left[1], top_left[1], top_right[1], bottom_right[1]), y = c(bottom_left[2], top_left[2], top_right[2], bottom_right[2])))
}

circle2square(center = c(11.571933,48.148971), radius = 200)
Map <- get_osm(corner_bbox(11.56924, 48.14717, 11.57463, 48.15077))


data_part <- matrix(0, 1, length(Map$nodes$tags[1,]))

List <- list()
j <- 1
data_part <- Map$nodes$tags[1,]

for(i in 1:(length(Map$nodes$tags[,1])-1)){

if(Map$nodes$tags[i,1] != Map$nodes$tags[i+1,1]){
List[[j]] <- data_part
data_part <- matrix(0, 1, length(Map$nodes$tags[1,]))
colnames(data_part) <- c("id", "k", "v")
j <- j+1
}
data_part <- rbind(data_part,Map$nodes$tags[i+1,])
if(data_part[1,1]==0)
data_part <- data_part[-1,]
}


Typ_amenity <- 0
Typ_leisure <- 0
Typ_sport <- 0
Typ_shop <- 0
Typ_vending <- 0
Typ_landuse <- 0
Typ_natural <- 0
Typ_craft <- 0
Typ_tourism <- 0
Typ_highway <- 0
Typ_railway <- 0
Typ_aeroway <- 0


Name <- 0
Coordinates <- 0
Street <- 0
House_number <- 0
ZIPcode <- 0
ID <- 0
Latitude <- 0
Longitude <- 0

for (i in 1:length(List)){
Typ_amenity[i] <- 0
Typ_leisure[i] <- 0
Typ_sport[i] <- 0
Typ_shop[i] <- 0
Typ_vending[i] <- 0
Typ_landuse[i] <- 0
Typ_natural[i] <- 0
Typ_craft[i] <- 0
Typ_tourism[i] <- 0
Typ_highway[i] <- 0
Typ_railway[i] <- 0
Typ_aeroway[i] <- 0
Name[i] <- 0
Coordinates[i] <- 0
Street[i] <- 0
House_number[i] <- 0
ZIPcode[i] <- 0
ID[i] <- 0
Latitude[i] <- 0
Longitude[i] <- 0
}


for (i in 1:length(List)){
if("amenity" %in% List[[i]][,2]){
Typ_amenity[i] <- List[[i]][,3][List[[i]][,2]=="amenity"]
}
if("leisure" %in% List[[i]][,2]){
Typ_leisure[i] <- List[[i]][,3][List[[i]][,2]=="leisure"]
}
if("sport" %in% List[[i]][,2]){
Typ_sport[i] <- List[[i]][,3][List[[i]][,2]=="sport"]
}
if("shop" %in% List[[i]][,2]){
Typ_shop[i] <- List[[i]][,3][List[[i]][,2]=="shop"]
}
if("vending" %in% List[[i]][,2]){
Typ_vending[i] <- List[[i]][,3][List[[i]][,2]=="vending"]
}
if("landuse" %in% List[[i]][,2]){
Typ_landuse[i] <- List[[i]][,3][List[[i]][,2]=="landuse"]
}
if("natural" %in% List[[i]][,2]){
Typ_natural[i] <- List[[i]][,3][List[[i]][,2]=="natural"]
}
if("craft" %in% List[[i]][,2]){
Typ_craft[i] <- List[[i]][,3][List[[i]][,2]=="craft"]
}
if("tourism" %in% List[[i]][,2]){
Typ_tourism[i] <- List[[i]][,3][List[[i]][,2]=="tourism"]
}
if("highway" %in% List[[i]][,2]){
Typ_highway[i] <- List[[i]][,3][List[[i]][,2]=="highway"]
}
if("railway" %in% List[[i]][,2]){
Typ_railway[i] <- List[[i]][,3][List[[i]][,2]=="railway"]
}
if("aeroway" %in% List[[i]][,2]){
Typ_aeroway[i] <- List[[i]][,3][List[[i]][,2]=="aeroway"]
}
if("name" %in% List[[i]][,2]){
Name[i] <- List[[i]][,3][List[[i]][,2]=="name"]
}
if("addr:street" %in% List[[i]][,2]){
Street[i] <- List[[i]][,3][List[[i]][,2]=="addr:street"]
}
if("addr:housenumber" %in% List[[i]][,2]){
House_number[i] <- List[[i]][,3][List[[i]][,2]=="addr:housenumber"]
}
if("addr:postcode" %in% List[[i]][,2]){
ZIPcode[i] <- List[[i]][,3][List[[i]][,2]=="addr:postcode"]
}
ID[i] <- List[[i]][1,1]
}

for (i in 1:length(ID)){
Latitude[i] <- Map$nodes$attrs[,8][Map$nodes$attrs[,1]==ID[i]]
Longitude[i] <- Map$nodes$attrs[,9][Map$nodes$attrs[,1]==ID[i]]
}

Data_total <- data.frame(Name, Typ_amenity, Typ_leisure, Typ_sport, Typ_shop, Typ_vending, Typ_landuse, Typ_natural, Typ_craft, Typ_tourism, Typ_highway, Typ_railway, Typ_aeroway, Latitude, Longitude, Street, House_number, ZIPcode)


#Sort the return of osmar

Data_amenity <- Data_gesamt[order(Typ_amenity),]
Data_amenity <- Data_amenity[(Data_amenity[,2] != "0"),]
Data_amenity <- Data_amenity[,(-3):(-13)]
colnames(Data_amenity)[2] <- "Typ"

Data_leisure <- Data_gesamt[order(Typ_leisure),]
Data_leisure <- Data_leisure[(Data_leisure[,3] != "0"),]
Data_leisure <- Data_leisure[,(-4):(-13)]
Data_leisure <- Data_leisure[,-2]
colnames(Data_leisure)[2] <- "Typ"

Data_sport <- Daten_gesamt[order(Typ_sport),]
Data_sport <- Daten_sport[(Data_sport[,4] != "0"),]
Data_sport <- Daten_sport[,(-5):(-13)]
Data_sport <- Daten_sport[,(-2):(-3)]
colnames(Data_sport)[2] <- "Typ"

Data_shop <- Data_gesamt[order(Typ_shop),]
Data_shop <- Data_shop[(Data_shop[,5] != "0"),]
Data_shop <- Data_shop[,(-6):(-13)]
Data_shop <- Data_shop[,(-2):(-4)]
colnames(Data_shop)[2] <- "Typ"

Data_vending <- Data_gesamt[order(Typ_vending),]
Data_vending <- Data_vending[(Data_vending[,6] != "0"),]
Data_vending <- Data_vending[,(-7):(-13)]
Data_vending <- Data_vending[,(-2):(-5)]
colnames(Data_vending)[2] <- "Typ"

Data_landuse <- Data_gesamt[order(Typ_landuse),]
Data_landuse <- Data_landuse[(Data_landuse[,7] != "0"),]
Data_landuse <- Data_landuse[,(-8):(-13)]
Data_landuse <- Data_landuse[,(-2):(-6)]
colnames(Daten_landuse)[2] <- "Typ"

Daten_natural <- Daten_gesamt[order(Typ_natural),]
Daten_natural <- Daten_natural[(Daten_natural[,8] != "0"),]
Daten_natural <- Daten_natural[,(-9):(-13)]
Daten_natural <- Daten_natural[,(-2):(-7)]
colnames(Daten_natural)[2] <- "Typ"

Daten_craft <- Daten_gesamt[order(Typ_leisure),]
Daten_craft <- Daten_craft[(Daten_craft[,9] != "0"),]
Daten_craft <- Daten_craft[,(-10):(-13)]
Daten_craft <- Daten_craft[,(-2):(-8)]
colnames(Daten_craft)[2] <- "Typ"

Data_tourism <- Data_gesamt[order(Typ_tourism),]
Data_tourism <- Data_tourism[(Data_tourism[,10] != "0"),]
Data_tourism <- Data_tourism[,(-11):(-13)]
Data_tourism <- Data_tourism[,(-2):(-9)]
colnames(Data_tourism)[2] <- "Typ"

Data_highway <- Data_gesamt[order(Typ_highway),]
Data_highway <- Data_highway[(Data_highway[,11] != "0"),]
Data_highway <- Data_highway[,(-12):(-13)]
Data_highway <- Data_highway[,(-2):(-10)]
colnames(Data_highway)[2] <- "Typ"

Data_railway <- Data_gesamt[order(Typ_railway),]
Data_railway <- Data_railway[(Data_railway[,12] != "0"),]
Data_railway <- Data_railway[,-13]
Data_railway <- Data_railway[,(-2):(-11)]
colnames(Data_railway)[2] <- "Typ"

Data_aeroway <- Data_gesamt[order(Typ_aeroway),]
Data_aeroway <- Data_aeroway[(Data_aeroway[,13] != "0"),]
Data_aeroway <- Data_aeroway[,(-2):(-12)]
colnames(Data_aeroway)[2] <- "Typ"


Data_sorted <- rbind(Data_amenity,Data_leisure,Data_sport,Data_shop,Data_vending,Data_landuse,Data_natural,Data_craft,Data_tourism,Data_highway,Data_railway,Data_aeroway)

Variablen <- names(summary(factor(Data_sorted$Typ)))

#All variables are returned for the area
#a subset is selected which consits of the obesity related factors
var_aim <- c("bar", "bbq", "biergarten", "cafe", "fast_food", "food_court", "ice_cream", "pub", "restaurant", "college", "school", "bicycle_parking", "bicycle_rental", "boat_sharing", "bus_station", "motorcycle_parking", "parking", "taxi", "clinic", "dentist", "doctors", "hospital", "nursing_home", "pharmacy", "dive_centre", "dojo", "hunting_stand", "kneipp_water_cure", "marketplace", "ranger_station", "vending_machine", "beach_resort", "dance", "dog_park", "fishing", "fitness_centre", "garden", "golf_course", "ice_rink", "nature_reserve", "park", "pitch", "playground", "sports_centre", "stadium", "swimming_area", "swimming_pool", "track", "water_park", "9pin", "10pin", "american_football", "aikido", "archery", "athletics", "australian_football", "badminton", "bandy", "base", "baseball", "basketball", "beachvolleyball", "billiards", "bmx", "bobsleigh", "boules", "bowls", "boxing", "canadian_football", "canoe", "chess", "cliff_diving", "climbing", "climbing_adventure", "cockfighting", "cricket", "croquet", "curling", "cycling", "darts", "dog_racing", "equestrian", "fencing", "field_hockey", "free_flying", "gaelic_games", "golf", "gymnastics", "handball", "hapkido", "horseshoes", "horse_racing", "ice_hockey", "ice_skating", "ice_stock", "judo", "karting", "kitesurfing", "korfball", "multi", "netball", "obstacle_course", "orienteering", "paddle_tennis", "parachuting", "paragliding", "pelota", "racquet", "roller_skating", "rowing", "rugby_league", "rugby_union", "running", "sailing", "scuba_diving", "shooting", "skateboard", "soccer", "sumo", "surfing", "swimming", "table_tennis", "taekwondo", "tennis", "toboggan", "volleyball", "water_polo", "water_ski", "weightlifting", "wrestling", "yoga", "allotments", "farmland", "farmyard", "forest", "grass", "greenfield", "greenhouse_horticulture", "meadow", "orchard", "plant_nursery", "recreation_ground", "village_green", "vineyard", "wood", "tree_row", "tree", "scrub", "grassland", "fell", "water", "therapist", "bakery", "beverages", "butcher", "cheese", "chocolate", "coffee", "confectionery", "convenience", "deli", "dairy", "farm", "greengrocer", "ice_cream", "pasta", "pastry", "seafood", "spices", "tea", "wine", "supermarket", "medical_supply", "nutrition_supplements", "garden_centre", "garden_furniture", "bicycle", "fishing", "free_flying", "hunting", "outdoor", "scuba_diving", "sports", "swimming_pool", "bicycle_tube", "bread", "chemist", "chewing_gums", "coffee", "drinks", "first_aid", "fishing_tackle", "food", "ice_cream", "milk", "sweets", "bakery", "caterer", "aquarium", "camp_site", "picnic_site", "theme_park", "bus_stop", "rest_area", "station", "heliport", "aerodrome")

Data_var <- matrix(0, 1, length(Data_sorted))
colnames(Data_var)[1:7] <- c("Name", "Typ", "Latitude", "Longitude", "Street", "House_number", "ZIPcode")

for (i in 1:length(var_aim)){
Data_var <- rbind(Data_var,Data_sorted[Data_sorted[,2] == var_aim[i],])
}

Data_var <- Data_var[-1,]

#delete the POIs lying outside the pre-specified bounding box
Data_var_deleted <- Data_var[(Data_var[,4]>=11.56924)&(Data_var[,4]<=11.57463)&(Data_var[,3]>=48.14717)&(Data_var[,3]<=48.15077),]

#Please insert a path to your hard disc to save the results in table format
#make sure that the path ends with .xls
library(xlsx)
write.xlsx(Data_var_deleted, file="")


Box_plot <- data.frame(x = c(11.56924, 11.56924, 11.57463, 11.57463, 11.56924), y = c(48.14717, 48.15077, 48.15077, 48.14717, 48.14717))

#Download the map of area D on your hard drive in png format
#left:11.568, right:11.576, top:48.1515, down:48.1465

#insert your path to the file on your hard drive at which you stored the png-map
#and make sure that it ends with .png
library(png)
OSM_png <- readPNG("")

library(MASS)

#scale the map to the coordinates
plot(c(11.5675, 11.579), c(48.1464, 48.1516), type='n', main="", xlab="Longitude", ylab="Latitude", cex.lab=1.7)
rasterImage(OSM_png, 11.568, 48.1465, 11.576, 48.1515)
points(Data_var_deleted$Longitude, Data_var_deleted$Latitude, pch=c(1:25,33:40)[factor(Data_var_deleted$Typ)], cex = 2, lwd = 3)
legend(11.576, 48.151, legend=names(summary(factor(Data_var_deleted$Typ))), pch=c(1:25,33:40), cex=1.7)
polygon(Box_plot, col=rgb(1, 0, 0,0.2), lwd = 2)
contour(kde2d(Data_var_deleted$Longitude, Data_var_deleted$Latitude), add = TRUE, lwd = 2, col = "blue")
text(11.574, 48.1467, "© OpenStreetMap contributors", fg="white", cex = 2)

#map dimensions can be corrected manually by altering the output window size
#second possibility via ggplot

library(ggplot2)
library(grid)

Box <- data.frame(x = c(11.56924, 11.56924, 11.57463, 11.57463), y = c(48.14717, 48.15077, 48.15077, 48.14717))
Box2 <- data.frame(x = c(11.568, 11.568, 11.576, 11.576), y = c(48.1465, 48.1515, 48.1515, 48.1465))


Map_grid <- rasterGrob(OSM_png, interpolate=TRUE)

#1st alternative
ggplot(data=Data_var_deleted, aes(x=Longitude, y=Latitude)) + annotation_custom(Map_grid, xmin=11.568, xmax=11.576, ymin=48.1465, ymax=48.1515) + geom_point(data=Data_var_deleted, aes(x=Longitude,y=Latitude, shape = Data_var_deleted$Typ), colour = "blue", size = 3) + scale_shape_manual(values=c(1:25,33:60), name = "Variables") + geom_density2d(data=Data_var_deleted, aes(x=Longitude, y=Latitude), color = "black", size = 1) + geom_polygon(data=Box2, aes(x=x, y=y), fill = "white", alpha = 0.01) + geom_polygon(data=Box, aes(x=x, y=y), fill = "yellow", alpha = 0.3) + theme(legend.text=element_text(size=14), legend.title=element_text(size = 16, face = "bold")) + annotate("text", x=11.57475, y= 48.1466, label= "© OpenStreetMap contributors", size=5)

#2nd alternative
ggplot(data=Data_var_deleted, aes(x=Longitude, y=Latitude)) + annotation_custom(Map_grid, xmin=11.568, xmax=11.576, ymin=48.1465, ymax=48.1515) + geom_point(data=Data_var_deleted, aes(x=Longitude,y=Latitude, shape = Data_var_deleted$Typ), colour = "blue", size = 5) + scale_shape_manual(values=c(1:25,33:60), name = "Variables") + geom_polygon(data=Box2, aes(x=x, y=y), fill = "white", alpha = 0.01) + geom_polygon(data=Box, aes(x=x, y=y), fill = "yellow", alpha = 0.3) + theme(legend.text=element_text(size=22), legend.title=element_text(size = 20, face = "bold"), legend.key.size = unit(1.5, "cm")) + annotate("text", x=11.57475, y= 48.1466, label= "© OpenStreetMap contributors", size=5)


